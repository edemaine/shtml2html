#!/usr/bin/coffee
fs = require 'fs'
path = require 'path'
strftime = require 'strftime'

config = vars = null
init = (filename, outFilename) ->
  stat = await fs.promises.stat filename
  config =
    echomsg: '(none)'
    errormsg: '[an error occurred while processing this directive]'
    sizefmt: 'bytes'
    timefmt: "%A, %d-%b-%Y %H:%M:%S %Z"
  vars =
    DOCUMENT_NAME: outFilename
    LAST_MODIFIED: ->
      strftime config.timefmt, stat.mtime

convertToString = (filename) ->
  html = fs.readFileSync filename, encoding: 'utf8'
  loop
    old = html
    html = html
    .replace /<!--#include\s+virtual\s*=\s*"([^"]+)"\s*-->/g, (match, url) ->
      convertToString path.join path.dirname(filename), url
    .replace /<!--#config\s+(\w+)="([^"]+)"\s*-->/g, (match, key, value) ->
      config[key] = value
      ''
    .replace /<!--#echo\s+var="([^"]+)"\s*-->/g, (match, key) ->
      val = vars[key] ? config.echomsg
      val = val() if val instanceof Function
      val
    break if old == html
  html

convertToFile = (filename) ->
  outFilename = filename.replace(/\.shtml$/, '') + '.html'
  await init filename, outFilename
  console.log filename, '->', outFilename
  html = """
    <!--This file is automatically generated by shtml2html. DO NOT EDIT.-->
    #{convertToString filename}
  """
  fs.writeFileSync outFilename, html, encoding: 'utf8'

main = ->
  for arg in process.argv[2..]
    await convertToFile arg

main() if require.main == module
